[{"/home/hank/pessoal/testdogc/test-front-end/src/index.js":"1","/home/hank/pessoal/testdogc/test-front-end/src/App.js":"2","/home/hank/pessoal/testdogc/test-front-end/src/style/theme.js":"3","/home/hank/pessoal/testdogc/test-front-end/src/components/List/index.js":"4","/home/hank/pessoal/testdogc/test-front-end/src/components/CharCard/index.js":"5","/home/hank/pessoal/testDog/test-front-end/src/index.js":"6","/home/hank/pessoal/testDog/test-front-end/src/App.js":"7","/home/hank/pessoal/testDog/test-front-end/src/style/theme.js":"8","/home/hank/pessoal/testDog/test-front-end/src/components/List/index.js":"9","/home/hank/pessoal/testDog/test-front-end/src/components/CharCard/index.js":"10","/home/hank/pessoal/testDog/test-front-end/src/components/CharModal/index.js":"11","/home/hank/pessoal/testDog/test-front-end/src/components/Header/index.js":"12","/home/hank/pessoal/testDog/test-front-end/src/components/FilterChar/index.js":"13"},{"size":346,"mtime":1640345959886,"results":"14","hashOfConfig":"15"},{"size":205,"mtime":1640349104189,"results":"16","hashOfConfig":"15"},{"size":261,"mtime":1640354999180,"results":"17","hashOfConfig":"15"},{"size":2154,"mtime":1640354232820,"results":"18","hashOfConfig":"15"},{"size":1153,"mtime":1640354957631,"results":"19","hashOfConfig":"15"},{"size":346,"mtime":1640345959886,"results":"20","hashOfConfig":"21"},{"size":293,"mtime":1640365361082,"results":"22","hashOfConfig":"21"},{"size":263,"mtime":1640361601343,"results":"23","hashOfConfig":"21"},{"size":3511,"mtime":1640375109108,"results":"24","hashOfConfig":"21"},{"size":1813,"mtime":1640366664580,"results":"25","hashOfConfig":"21"},{"size":2414,"mtime":1640377072628,"results":"26","hashOfConfig":"21"},{"size":270,"mtime":1640368307367,"results":"27","hashOfConfig":"21"},{"size":1468,"mtime":1640376949853,"results":"28","hashOfConfig":"21"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1wfyro0",{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"aq5z1u",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/hank/pessoal/testdogc/test-front-end/src/index.js",[],["59","60"],"/home/hank/pessoal/testdogc/test-front-end/src/App.js",[],"/home/hank/pessoal/testdogc/test-front-end/src/style/theme.js",["61"],"/home/hank/pessoal/testdogc/test-front-end/src/components/List/index.js",["62","63","64","65","66"],"/home/hank/pessoal/testdogc/test-front-end/src/components/CharCard/index.js",[],"/home/hank/pessoal/testDog/test-front-end/src/index.js",[],["67","68"],"/home/hank/pessoal/testDog/test-front-end/src/App.js",[],"/home/hank/pessoal/testDog/test-front-end/src/style/theme.js",["69"],"import { extendTheme, theme as ChakraTheme } from \"@chakra-ui/react\";\n\nexport const theme = extendTheme({\n  fontSizes: {},\n  styles: {\n    global: {\n      body: {\n        bg: \"#e6e9f0\",\n        color: \"black\",\n        fontFamily: \"Lato\",\n      },\n    },\n  },\n});\n","/home/hank/pessoal/testDog/test-front-end/src/components/List/index.js",["70"],"import { Box, Button, Flex, Input, SimpleGrid } from \"@chakra-ui/react\";\nimport Loader from \"react-loader-spinner\";\nimport { useEffect, useState } from \"react\";\nimport { CharCard } from \"../CharCard\";\nimport { FilterChar } from \"../FilterChar\";\n\nexport const List = () => {\n  const [charactersList, setCharactersList] = useState([]);\n  const [charactersListFilter, setCharactersListFilter] = useState([]);\n  const [link, setLink] = useState(\"https://rickandmortyapi.com/api/character\");\n  const [loading, setLoading] = useState(false);\n  const [prevDisable, setPrevDisable] = useState(true);\n  const [nextDisable, setNextDisable] = useState(false);\n  console.log(charactersListFilter.length);\n  const nextPage = () => {\n    fetch(link)\n      .then((response) => response.json())\n      .then(async (response) => {\n        if (response.info.next) {\n          await setLink(response.info.next);\n          setNextDisable(false);\n          setPrevDisable(false);\n        } else {\n          setNextDisable(true);\n        }\n      });\n  };\n\n  const previousPage = () => {\n    fetch(link)\n      .then((response) => response.json())\n      .then(async (response) => {\n        if (response.info.prev) {\n          await setLink(response.info.prev);\n          setPrevDisable(false);\n        } else {\n          setPrevDisable(true);\n        }\n      });\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(link)\n      .then((response) => response.json())\n      .then(async (response) => {\n        await setCharactersList(response.results);\n        setLoading(false);\n      });\n  }, [link]);\n\n  return (\n    <>\n      <Flex justifyContent=\"center\" w=\"100%\" padding=\"20px\">\n        <Box w=\"100%\" maxW=\"1440px\">\n          <FilterChar setCharactersListFilter={setCharactersListFilter} />\n          {loading ? (\n            <Box position=\"absolute\" top=\"50%\" left=\"50%\">\n              <Loader\n                type=\"TailSpin\"\n                color=\"#00BFFF\"\n                height={100}\n                width={100}\n              />\n            </Box>\n          ) : charactersListFilter.length > 0 ? (\n            <SimpleGrid minChildWidth=\"250px\" spacing=\"30px\">\n              {charactersListFilter.map((character) => (\n                <>\n                  <CharCard character={character} />\n                </>\n              ))}\n            </SimpleGrid>\n          ) : (\n            <>\n              <SimpleGrid minChildWidth=\"250px\" spacing=\"30px\">\n                {charactersList.map((character) => (\n                  <>\n                    <CharCard character={character} />\n                  </>\n                ))}\n              </SimpleGrid>\n              <Flex mt=\"5\" justifyContent=\"center\" gap=\"5%\">\n                <Button\n                  w=\"200px\"\n                  bg=\"#42b4ca\"\n                  color=\"white\"\n                  _hover={{ bg: \"#accb41\" }}\n                  onClick={() => previousPage()}\n                  isDisabled={prevDisable ? true : false}\n                >\n                  Pagina Anterior\n                </Button>\n                <Button\n                  w=\"200px\"\n                  transition=\"0.5s\"\n                  bg=\"#42b4ca\"\n                  color=\"white\"\n                  _hover={{ bg: \"#accb41\" }}\n                  onClick={() => nextPage()}\n                  isDisabled={nextDisable ? true : false}\n                >\n                  Proxima Pagina\n                </Button>\n              </Flex>\n            </>\n          )}\n        </Box>\n      </Flex>\n    </>\n  );\n};\n","/home/hank/pessoal/testDog/test-front-end/src/components/CharCard/index.js",[],"/home/hank/pessoal/testDog/test-front-end/src/components/CharModal/index.js",[],"/home/hank/pessoal/testDog/test-front-end/src/components/Header/index.js",[],"/home/hank/pessoal/testDog/test-front-end/src/components/FilterChar/index.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":32,"nodeType":"77","messageId":"78","endLine":1,"endColumn":43},{"ruleId":"75","severity":1,"message":"79","line":5,"column":3,"nodeType":"77","messageId":"78","endLine":5,"endColumn":7},{"ruleId":"75","severity":1,"message":"80","line":6,"column":3,"nodeType":"77","messageId":"78","endLine":6,"endColumn":10},{"ruleId":"75","severity":1,"message":"81","line":7,"column":3,"nodeType":"77","messageId":"78","endLine":7,"endColumn":9},{"ruleId":"75","severity":1,"message":"82","line":9,"column":3,"nodeType":"77","messageId":"78","endLine":9,"endColumn":9},{"ruleId":"75","severity":1,"message":"83","line":11,"column":8,"nodeType":"77","messageId":"78","endLine":11,"endColumn":13},{"ruleId":"71","replacedBy":"84"},{"ruleId":"73","replacedBy":"85"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":32,"nodeType":"77","messageId":"78","endLine":1,"endColumn":43},{"ruleId":"75","severity":1,"message":"86","line":1,"column":29,"nodeType":"77","messageId":"78","endLine":1,"endColumn":34},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'ChakraTheme' is defined but never used.","Identifier","unusedVar","'Grid' is defined but never used.","'Heading' is defined but never used.","'HStack' is defined but never used.","'Spacer' is defined but never used.","'axios' is defined but never used.",["87"],["88"],"'Input' is defined but never used.","no-global-assign","no-unsafe-negation"]