{"ast":null,"code":"var _jsxFileName = \"/home/hank/pessoal/testDog/test-front-end/src/components/List/index.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Flex, Input, SimpleGrid } from \"@chakra-ui/react\";\nimport Loader from \"react-loader-spinner\";\nimport { useEffect, useState } from \"react\";\nimport { CharCard } from \"../CharCard\";\nimport { FilterChar } from \"../FilterChar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const List = () => {\n  _s();\n\n  const [charactersList, setCharactersList] = useState([]);\n  const [charactersListFilter, setCharactersListFilter] = useState([]);\n  const [link, setLink] = useState(\"https://rickandmortyapi.com/api/character\");\n  const [loading, setLoading] = useState(false);\n  const [prevDisable, setPrevDisable] = useState(true);\n  const [nextDisable, setNextDisable] = useState(false);\n  console.log(charactersListFilter.length);\n\n  const nextPage = () => {\n    fetch(link).then(response => response.json()).then(async response => {\n      if (response.info.next) {\n        await setLink(response.info.next);\n        setNextDisable(false);\n        setPrevDisable(false);\n      } else {\n        setNextDisable(true);\n      }\n    });\n  };\n\n  const previousPage = () => {\n    fetch(link).then(response => response.json()).then(async response => {\n      if (response.info.prev) {\n        await setLink(response.info.prev);\n        setPrevDisable(false);\n      } else {\n        setPrevDisable(true);\n      }\n    });\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(link).then(response => response.json()).then(async response => {\n      await setCharactersList(response.results);\n      setLoading(false);\n    });\n  }, [link]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"center\",\n      w: \"100%\",\n      padding: \"20px\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        maxW: \"1440px\",\n        children: [/*#__PURE__*/_jsxDEV(FilterChar, {\n          setCharactersListFilter: setCharactersListFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          children: /*#__PURE__*/_jsxDEV(Loader, {\n            type: \"TailSpin\",\n            color: \"#00BFFF\",\n            height: 100,\n            width: 100\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this) : charactersListFilter.length < 0 ? /*#__PURE__*/_jsxDEV(SimpleGrid, {\n          minChildWidth: \"250px\",\n          spacing: \"30px\",\n          children: charactersListFilter.map(character => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(CharCard, {\n              character: character\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this)\n          }, void 0, false))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(SimpleGrid, {\n          minChildWidth: \"250px\",\n          spacing: \"30px\",\n          children: charactersList.map(character => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(CharCard, {\n              character: character\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this)\n          }, void 0, false))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          mt: \"5\",\n          justifyContent: \"center\",\n          gap: \"5%\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            w: \"200px\",\n            bg: \"#42b4ca\",\n            color: \"white\",\n            _hover: {\n              bg: \"#accb41\"\n            },\n            onClick: () => previousPage(),\n            isDisabled: prevDisable ? true : false,\n            children: \"Pagina Anterior\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            w: \"200px\",\n            transition: \"0.5s\",\n            bg: \"#42b4ca\",\n            color: \"white\",\n            _hover: {\n              bg: \"#accb41\"\n            },\n            onClick: () => nextPage(),\n            isDisabled: nextDisable ? true : false,\n            children: \"Proxima Pagina\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(List, \"073WgfWuALzwW2ni/7zTH8wZXvY=\");\n\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/hank/pessoal/testDog/test-front-end/src/components/List/index.js"],"names":["Box","Button","Flex","Input","SimpleGrid","Loader","useEffect","useState","CharCard","FilterChar","List","charactersList","setCharactersList","charactersListFilter","setCharactersListFilter","link","setLink","loading","setLoading","prevDisable","setPrevDisable","nextDisable","setNextDisable","console","log","length","nextPage","fetch","then","response","json","info","next","previousPage","prev","results","map","character","bg"],"mappings":"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","sourcesContent":["import { Box, Button, Flex, Input, SimpleGrid } from \"@chakra-ui/react\";\nimport Loader from \"react-loader-spinner\";\nimport { useEffect, useState } from \"react\";\nimport { CharCard } from \"../CharCard\";\nimport { FilterChar } from \"../FilterChar\";\n\nexport const List = () => {\n  const [charactersList, setCharactersList] = useState([]);\n  const [charactersListFilter, setCharactersListFilter] = useState([]);\n  const [link, setLink] = useState(\"https://rickandmortyapi.com/api/character\");\n  const [loading, setLoading] = useState(false);\n  const [prevDisable, setPrevDisable] = useState(true);\n  const [nextDisable, setNextDisable] = useState(false);\n  console.log(charactersListFilter.length);\n  const nextPage = () => {\n    fetch(link)\n      .then((response) => response.json())\n      .then(async (response) => {\n        if (response.info.next) {\n          await setLink(response.info.next);\n          setNextDisable(false);\n          setPrevDisable(false);\n        } else {\n          setNextDisable(true);\n        }\n      });\n  };\n\n  const previousPage = () => {\n    fetch(link)\n      .then((response) => response.json())\n      .then(async (response) => {\n        if (response.info.prev) {\n          await setLink(response.info.prev);\n          setPrevDisable(false);\n        } else {\n          setPrevDisable(true);\n        }\n      });\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(link)\n      .then((response) => response.json())\n      .then(async (response) => {\n        await setCharactersList(response.results);\n        setLoading(false);\n      });\n  }, [link]);\n\n  return (\n    <>\n      <Flex justifyContent=\"center\" w=\"100%\" padding=\"20px\">\n        <Box w=\"100%\" maxW=\"1440px\">\n          <FilterChar setCharactersListFilter={setCharactersListFilter} />\n          {loading ? (\n            <Box position=\"absolute\" top=\"50%\" left=\"50%\">\n              <Loader\n                type=\"TailSpin\"\n                color=\"#00BFFF\"\n                height={100}\n                width={100}\n              />\n            </Box>\n          ) : charactersListFilter.length < 0 ? (\n            <SimpleGrid minChildWidth=\"250px\" spacing=\"30px\">\n              {charactersListFilter.map((character) => (\n                <>\n                  <CharCard character={character} />\n                </>\n              ))}\n            </SimpleGrid>\n          ) : (\n            <SimpleGrid minChildWidth=\"250px\" spacing=\"30px\">\n              {charactersList.map((character) => (\n                <>\n                  <CharCard character={character} />\n                </>\n              ))}\n            </SimpleGrid>\n          )}\n          <Flex mt=\"5\" justifyContent=\"center\" gap=\"5%\">\n            <Button\n              w=\"200px\"\n              bg=\"#42b4ca\"\n              color=\"white\"\n              _hover={{ bg: \"#accb41\" }}\n              onClick={() => previousPage()}\n              isDisabled={prevDisable ? true : false}\n            >\n              Pagina Anterior\n            </Button>\n            <Button\n              w=\"200px\"\n              transition=\"0.5s\"\n              bg=\"#42b4ca\"\n              color=\"white\"\n              _hover={{ bg: \"#accb41\" }}\n              onClick={() => nextPage()}\n              isDisabled={nextDisable ? true : false}\n            >\n              Proxima Pagina\n            </Button>\n          </Flex>\n        </Box>\n      </Flex>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}