{"ast":null,"code":"var _jsxFileName = \"/home/hank/pessoal/testDog/test-front-end/src/components/FilterChar/index.js\",\n    _s = $RefreshSig$();\n\nimport { SearchIcon } from \"@chakra-ui/icons\";\nimport { Button, Input, InputGroup, InputRightElement } from \"@chakra-ui/react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const FilterChar = _ref => {\n  _s();\n\n  let {\n    setCharactersListFilter\n  } = _ref;\n  const [userInput, setUserInput] = useState(\"\");\n\n  const filterChar = async () => {\n    const newUserInput = userInput.toLocaleLowerCase();\n    fetch(`https://rickandmortyapi.com/api/character/?name=${newUserInput}`).then(response => response.json()).then(response => setCharactersListFilter(response.results.sort((a, b) => a.name > b.name ? 1 : b.name > a.name ? -1 : 0))).catch(err => toast({\n      title: \"Account created.\",\n      description: \"We've created your account for you.\",\n      status: \"success\",\n      duration: 9000,\n      isClosable: true\n    }));\n  };\n\n  const handleClick = () => {\n    if (userInput.trim() !== \"\") {\n      filterChar();\n      setUserInput(\"\");\n    }\n\n    setCharactersListFilter([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(InputGroup, {\n      size: \"md\",\n      mb: \"50px\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        variant: \"filled\",\n        pr: \"4.5rem\",\n        placeholder: \"Digite o nome da pesquisa\",\n        type: \"text\",\n        value: userInput,\n        onChange: event => setUserInput(event.target.value),\n        borderColor: \"#accb41\",\n        _focus: {\n          borderColor: \"#42b4ca\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n        width: \"4.5rem\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          h: \"1.75rem\",\n          size: \"sm\",\n          onClick: handleClick,\n          children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(FilterChar, \"5m2DpaTPYgx4BaqjxYL18HEa8GU=\");\n\n_c = FilterChar;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterChar\");","map":{"version":3,"sources":["/home/hank/pessoal/testDog/test-front-end/src/components/FilterChar/index.js"],"names":["SearchIcon","Button","Input","InputGroup","InputRightElement","useState","FilterChar","setCharactersListFilter","userInput","setUserInput","filterChar","newUserInput","toLocaleLowerCase","fetch","then","response","json","results","sort","a","b","name","catch","err","toast","title","description","status","duration","isClosable","handleClick","trim","event","target","value","borderColor"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,UAAxB,EAAoCC,iBAApC,QAA6D,kBAA7D;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,OAAO,MAAMC,UAAU,GAAG,QAAiC;AAAA;;AAAA,MAAhC;AAAEC,IAAAA;AAAF,GAAgC;AACzD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,EAAD,CAA1C;;AACA,QAAMK,UAAU,GAAG,YAAY;AAC7B,UAAMC,YAAY,GAAGH,SAAS,CAACI,iBAAV,EAArB;AACAC,IAAAA,KAAK,CAAE,mDAAkDF,YAAa,EAAjE,CAAL,CACGG,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESC,QAAD,IACJR,uBAAuB,CACrBQ,QAAQ,CAACE,OAAT,CAAiBC,IAAjB,CAAsB,CAACC,CAAD,EAAIC,CAAJ,KACpBD,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAX,GAAkB,CAAlB,GAAsBD,CAAC,CAACC,IAAF,GAASF,CAAC,CAACE,IAAX,GAAkB,CAAC,CAAnB,GAAuB,CAD/C,CADqB,CAH3B,EASGC,KATH,CASUC,GAAD,IACLC,KAAK,CAAC;AACJC,MAAAA,KAAK,EAAE,kBADH;AAEJC,MAAAA,WAAW,EAAE,qCAFT;AAGJC,MAAAA,MAAM,EAAE,SAHJ;AAIJC,MAAAA,QAAQ,EAAE,IAJN;AAKJC,MAAAA,UAAU,EAAE;AALR,KAAD,CAVT;AAkBD,GApBD;;AAqBA,QAAMC,WAAW,GAAG,MAAM;AACxB,QAAItB,SAAS,CAACuB,IAAV,OAAqB,EAAzB,EAA6B;AAC3BrB,MAAAA,UAAU;AACVD,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACD;;AACDF,IAAAA,uBAAuB,CAAC,EAAD,CAAvB;AACD,GAND;;AAQA,sBACE;AAAA,2BACE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAC,IAAjB;AAAsB,MAAA,EAAE,EAAC,MAAzB;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,OAAO,EAAC,QADV;AAEE,QAAA,EAAE,EAAC,QAFL;AAGE,QAAA,WAAW,EAAC,2BAHd;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,KAAK,EAAEC,SALT;AAME,QAAA,QAAQ,EAAGwB,KAAD,IAAWvB,YAAY,CAACuB,KAAK,CAACC,MAAN,CAAaC,KAAd,CANnC;AAOE,QAAA,WAAW,EAAC,SAPd;AAQE,QAAA,MAAM,EAAE;AAAEC,UAAAA,WAAW,EAAE;AAAf;AARV;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,iBAAD;AAAmB,QAAA,KAAK,EAAC,QAAzB;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,CAAC,EAAC,SAAV;AAAoB,UAAA,IAAI,EAAC,IAAzB;AAA8B,UAAA,OAAO,EAAEL,WAAvC;AAAA,iCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAqBD,CApDM;;GAAMxB,U;;KAAAA,U","sourcesContent":["import { SearchIcon } from \"@chakra-ui/icons\";\nimport { Button, Input, InputGroup, InputRightElement } from \"@chakra-ui/react\";\nimport { useState } from \"react\";\n\nexport const FilterChar = ({ setCharactersListFilter }) => {\n  const [userInput, setUserInput] = useState(\"\");\n  const filterChar = async () => {\n    const newUserInput = userInput.toLocaleLowerCase();\n    fetch(`https://rickandmortyapi.com/api/character/?name=${newUserInput}`)\n      .then((response) => response.json())\n      .then((response) =>\n        setCharactersListFilter(\n          response.results.sort((a, b) =>\n            a.name > b.name ? 1 : b.name > a.name ? -1 : 0\n          )\n        )\n      )\n      .catch((err) =>\n        toast({\n          title: \"Account created.\",\n          description: \"We've created your account for you.\",\n          status: \"success\",\n          duration: 9000,\n          isClosable: true,\n        })\n      );\n  };\n  const handleClick = () => {\n    if (userInput.trim() !== \"\") {\n      filterChar();\n      setUserInput(\"\");\n    }\n    setCharactersListFilter([]);\n  };\n\n  return (\n    <>\n      <InputGroup size=\"md\" mb=\"50px\">\n        <Input\n          variant=\"filled\"\n          pr=\"4.5rem\"\n          placeholder=\"Digite o nome da pesquisa\"\n          type=\"text\"\n          value={userInput}\n          onChange={(event) => setUserInput(event.target.value)}\n          borderColor=\"#accb41\"\n          _focus={{ borderColor: \"#42b4ca\" }}\n        />\n        <InputRightElement width=\"4.5rem\">\n          <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n            <SearchIcon />\n          </Button>\n        </InputRightElement>\n      </InputGroup>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}