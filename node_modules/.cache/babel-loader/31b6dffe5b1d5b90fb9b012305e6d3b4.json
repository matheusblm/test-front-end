{"ast":null,"code":"var _jsxFileName = \"/home/hank/pessoal/testDog/test-front-end/src/components/CharCard/index.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Flex, Image, Text, useDisclosure, VStack } from \"@chakra-ui/react\";\nimport { CharModal } from \"../CharModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CharCard = _ref => {\n  _s();\n\n  let {\n    character\n  } = _ref;\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      transition: \"0.5s\",\n      _hover: {\n        transform: \"scale(1.05)\"\n      },\n      children: /*#__PURE__*/_jsxDEV(VStack, {\n        borderRadius: \"xl\",\n        shadow: \"xl\",\n        h: \"500px\",\n        \"justify-content\": \"space-between\",\n        bg: \"white\",\n        color: \"black\",\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          w: \"100%\",\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: character.image,\n            alt: character.name,\n            w: \"100%\",\n            h: \"250px\",\n            alignSelf: \"center\",\n            borderTopRadius: \"xl\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(VStack, {\n          padding: \"10px\",\n          w: \"100%\",\n          fontSize: \"large\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            w: \"100%\",\n            children: [\"Nome: \", character.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            w: \"100%\",\n            children: [\"G\\xEAnero: \", character.gender]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            w: \"100%\",\n            children: [\"Esp\\xE9cie: \", character.species]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          padding: \"20px\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            w: \"200px\",\n            transition: \"0.5s\",\n            bg: \"#373F51\",\n            color: \"white\",\n            onClick: onOpen,\n            children: \"Mais Informa\\xE7\\xF5es\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CharModal, {\n      isOpen: isOpen,\n      onClose: onClose,\n      character: character\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CharCard, \"b6HgRGUKK6FEfELRcVwOTS4RtgI=\", false, function () {\n  return [useDisclosure];\n});\n\n_c = CharCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharCard\");","map":{"version":3,"sources":["/home/hank/pessoal/testDog/test-front-end/src/components/CharCard/index.js"],"names":["Box","Button","Flex","Image","Text","useDisclosure","VStack","CharModal","CharCard","character","isOpen","onOpen","onClose","transform","image","name","gender","species"],"mappings":";;;AAAA,SACEA,GADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,KAJF,EAKEC,IALF,EAMEC,aANF,EAOEC,MAPF,QAQO,kBARP;AASA,SAASC,SAAT,QAA0B,cAA1B;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,QAAmB;AAAA;;AAAA,MAAlB;AAAEC,IAAAA;AAAF,GAAkB;AACzC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,MAAV;AAAkBC,IAAAA;AAAlB,MAA8BP,aAAa,EAAjD;AACA,sBACE;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,UAAU,EAAC,MAAhB;AAAuB,MAAA,MAAM,EAAE;AAAEQ,QAAAA,SAAS,EAAE;AAAb,OAA/B;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,YAAY,EAAC,IADf;AAEE,QAAA,MAAM,EAAC,IAFT;AAGE,QAAA,CAAC,EAAC,OAHJ;AAIE,2BAAgB,eAJlB;AAKE,QAAA,EAAE,EAAC,OALL;AAME,QAAA,KAAK,EAAC,OANR;AAAA,gCAQE,QAAC,IAAD;AAAM,UAAA,CAAC,EAAC,MAAR;AAAe,UAAA,cAAc,EAAC,QAA9B;AAAA,iCACE,QAAC,KAAD;AACE,YAAA,GAAG,EAAEJ,SAAS,CAACK,KADjB;AAEE,YAAA,GAAG,EAAEL,SAAS,CAACM,IAFjB;AAGE,YAAA,CAAC,EAAC,MAHJ;AAIE,YAAA,CAAC,EAAC,OAJJ;AAKE,YAAA,SAAS,EAAC,QALZ;AAME,YAAA,eAAe,EAAC;AANlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBARF,eAkBE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,MAAhB;AAAuB,UAAA,CAAC,EAAC,MAAzB;AAAgC,UAAA,QAAQ,EAAC,OAAzC;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,CAAC,EAAC,MAAR;AAAA,iCAAsBN,SAAS,CAACM,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD;AAAM,YAAA,CAAC,EAAC,MAAR;AAAA,sCAAwBN,SAAS,CAACO,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,IAAD;AAAM,YAAA,CAAC,EAAC,MAAR;AAAA,uCAAyBP,SAAS,CAACQ,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBF,eAuBE,QAAC,GAAD;AAAK,UAAA,OAAO,EAAC,MAAb;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,CAAC,EAAC,OADJ;AAEE,YAAA,UAAU,EAAC,MAFb;AAGE,YAAA,EAAE,EAAC,SAHL;AAIE,YAAA,KAAK,EAAC,OAJR;AAKE,YAAA,OAAO,EAAEN,MALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAsCE,QAAC,SAAD;AAAW,MAAA,MAAM,EAAED,MAAnB;AAA2B,MAAA,OAAO,EAAEE,OAApC;AAA6C,MAAA,SAAS,EAAEH;AAAxD;AAAA;AAAA;AAAA;AAAA,YAtCF;AAAA,kBADF;AA0CD,CA5CM;;GAAMD,Q;UACyBH,a;;;KADzBG,Q","sourcesContent":["import {\n  Box,\n  Button,\n  Flex,\n  Image,\n  Text,\n  useDisclosure,\n  VStack,\n} from \"@chakra-ui/react\";\nimport { CharModal } from \"../CharModal\";\n\nexport const CharCard = ({ character }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  return (\n    <>\n      <Box transition=\"0.5s\" _hover={{ transform: \"scale(1.05)\" }}>\n        <VStack\n          borderRadius=\"xl\"\n          shadow=\"xl\"\n          h=\"500px\"\n          justify-content=\"space-between\"\n          bg=\"white\"\n          color=\"black\"\n        >\n          <Flex w=\"100%\" justifyContent=\"center\">\n            <Image\n              src={character.image}\n              alt={character.name}\n              w=\"100%\"\n              h=\"250px\"\n              alignSelf=\"center\"\n              borderTopRadius=\"xl\"\n            />\n          </Flex>\n          <VStack padding=\"10px\" w=\"100%\" fontSize=\"large\">\n            <Text w=\"100%\">Nome: {character.name}</Text>\n            <Text w=\"100%\">Gênero: {character.gender}</Text>\n            <Text w=\"100%\">Espécie: {character.species}</Text>\n          </VStack>\n          <Box padding=\"20px\">\n            <Button\n              w=\"200px\"\n              transition=\"0.5s\"\n              bg=\"#373F51\"\n              color=\"white\"\n              onClick={onOpen}\n            >\n              Mais Informações\n            </Button>\n          </Box>\n        </VStack>\n      </Box>\n      <CharModal isOpen={isOpen} onClose={onClose} character={character} />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}