{"ast":null,"code":"var _jsxFileName = \"/home/hank/pessoal/testdogc/test-front-end/src/components/List/index.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Flex, Heading, HStack, Spacer } from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { CharCard } from \"../CharCard\";\nimport Loader from \"react-loader-spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const List = () => {\n  _s();\n\n  const [charactersList, setCharactersList] = useState([]);\n  const [link, setLink] = useState(\"https://rickandmortyapi.com/api/character\");\n  const [loading, setLoading] = useState(true);\n\n  const nextPage = () => {\n    fetch(link).then(response => response.json()).then(async response => {\n      if (response.info.next) {\n        await setLink(response.info.next);\n      }\n    }).catch(err => console.log(err));\n  };\n\n  const previousPage = () => {\n    fetch(link).then(response => response.json()).then(async response => {\n      if (response.info.prev) {\n        await setLink(response.info.prev);\n      }\n    }).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(link).then(response => response.json()).then(async response => {\n      await setCharactersList(response.results);\n      setLoading(false);\n    }).catch(err => console.log(err));\n  }, [link]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: [loading ? /*#__PURE__*/_jsxDEV(Box, {\n        position: \"absolute\",\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          type: \"TailSpin\",\n          color: \"#00BFFF\",\n          height: 100,\n          width: 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Flex, {\n        flexWrap: \"wrap\",\n        children: charactersList.map(character => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(CharCard, {\n            character: character\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: previousPage,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextPage,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(List, \"wWSUWm4uc2Wfxb/TMPtim8G4arY=\");\n\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/hank/pessoal/testdogc/test-front-end/src/components/List/index.js"],"names":["Box","Flex","Heading","HStack","Spacer","axios","useEffect","useState","CharCard","Loader","List","charactersList","setCharactersList","link","setLink","loading","setLoading","nextPage","fetch","then","response","json","info","next","catch","err","console","log","previousPage","prev","results","map","character"],"mappings":"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","sourcesContent":["import { Box, Flex, Heading, HStack, Spacer } from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { CharCard } from \"../CharCard\";\nimport Loader from \"react-loader-spinner\";\n\nexport const List = () => {\n  const [charactersList, setCharactersList] = useState([]);\n  const [link, setLink] = useState(\"https://rickandmortyapi.com/api/character\");\n  const [loading, setLoading] = useState(true);\n  const nextPage = () => {\n    fetch(link)\n      .then((response) => response.json())\n      .then(async (response) => {\n        if (response.info.next) {\n          await setLink(response.info.next);\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const previousPage = () => {\n    fetch(link)\n      .then((response) => response.json())\n      .then(async (response) => {\n        if (response.info.prev) {\n          await setLink(response.info.prev);\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(link)\n      .then((response) => response.json())\n      .then(async (response) => {\n        await setCharactersList(response.results);\n        setLoading(false);\n      })\n      .catch((err) => console.log(err));\n  }, [link]);\n\n  return (\n    <>\n      <Box>\n        {loading ? (\n          <Box position=\"absolute\">\n            <Loader type=\"TailSpin\" color=\"#00BFFF\" height={100} width={100} />\n          </Box>\n        ) : (\n          <Flex flexWrap=\"wrap\">\n            {charactersList.map((character) => (\n              <>\n                <CharCard character={character} />\n                <Spacer />\n              </>\n            ))}\n          </Flex>\n        )}\n\n        <button onClick={previousPage}>Previous</button>\n        <button onClick={nextPage}>Next</button>\n      </Box>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}