{"ast":null,"code":"var _jsxFileName = \"/home/hank/pessoal/testDog/test-front-end/src/components/List/index.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Flex, Grid, Heading, HStack, SimpleGrid, Spacer } from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { CharCard } from \"../CharCard\";\nimport Loader from \"react-loader-spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const List = () => {\n  _s();\n\n  const [charactersList, setCharactersList] = useState([]);\n  const [link, setLink] = useState(\"https://rickandmortyapi.com/api/character\");\n  const [loading, setLoading] = useState(false);\n\n  const nextPage = () => {\n    fetch(link).then(response => response.json()).then(async response => {\n      if (response.info.next) {\n        await setLink(response.info.next);\n      }\n    }).catch(err => console.log(err));\n  };\n\n  const previousPage = () => {\n    fetch(link).then(response => response.json()).then(async response => {\n      if (response.info.prev) {\n        await setLink(response.info.prev);\n      }\n    }).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(link).then(response => response.json()).then(async response => {\n      await setCharactersList(response.results);\n      setLoading(false);\n    }).catch(err => console.log(err));\n  }, [link]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"center\",\n      w: \"100%\",\n      padding: \"20px\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        maxW: \"1440px\",\n        children: [loading ? /*#__PURE__*/_jsxDEV(Box, {\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          children: /*#__PURE__*/_jsxDEV(Loader, {\n            type: \"TailSpin\",\n            color: \"#00BFFF\",\n            height: 100,\n            width: 100\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(SimpleGrid, {\n          minChildWidth: \"250px\",\n          spacing: \"30px\",\n          children: charactersList.map(character => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(CharCard, {\n              character: character\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this)\n          }, void 0, false))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: \"5\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            w: \"200px\",\n            transition: \"0.5s\",\n            bg: \"#c19434\",\n            onClick: () => previousPage(),\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            w: \"200px\",\n            transition: \"0.5s\",\n            bg: \"#c19434\",\n            onClick: () => nextPage(),\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(List, \"kyct3sliB5QcOhmC50QIge7JGm4=\");\n\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/hank/pessoal/testDog/test-front-end/src/components/List/index.js"],"names":["Box","Button","Flex","Grid","Heading","HStack","SimpleGrid","Spacer","axios","useEffect","useState","CharCard","Loader","List","charactersList","setCharactersList","link","setLink","loading","setLoading","nextPage","fetch","then","response","json","info","next","catch","err","console","log","previousPage","prev","results","map","character"],"mappings":"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","sourcesContent":["import {\n  Box,\n  Button,\n  Flex,\n  Grid,\n  Heading,\n  HStack,\n  SimpleGrid,\n  Spacer,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { CharCard } from \"../CharCard\";\nimport Loader from \"react-loader-spinner\";\n\nexport const List = () => {\n  const [charactersList, setCharactersList] = useState([]);\n  const [link, setLink] = useState(\"https://rickandmortyapi.com/api/character\");\n  const [loading, setLoading] = useState(false);\n  const nextPage = () => {\n    fetch(link)\n      .then((response) => response.json())\n      .then(async (response) => {\n        if (response.info.next) {\n          await setLink(response.info.next);\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const previousPage = () => {\n    fetch(link)\n      .then((response) => response.json())\n      .then(async (response) => {\n        if (response.info.prev) {\n          await setLink(response.info.prev);\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(link)\n      .then((response) => response.json())\n      .then(async (response) => {\n        await setCharactersList(response.results);\n        setLoading(false);\n      })\n      .catch((err) => console.log(err));\n  }, [link]);\n\n  return (\n    <>\n      <Flex justifyContent=\"center\" w=\"100%\" padding=\"20px\">\n        <Box w=\"100%\" maxW=\"1440px\">\n          {loading ? (\n            <Box position=\"absolute\" top=\"50%\" left=\"50%\">\n              <Loader\n                type=\"TailSpin\"\n                color=\"#00BFFF\"\n                height={100}\n                width={100}\n              />\n            </Box>\n          ) : (\n            <SimpleGrid minChildWidth=\"250px\" spacing=\"30px\">\n              {charactersList.map((character) => (\n                <>\n                  <CharCard character={character} />\n                </>\n              ))}\n            </SimpleGrid>\n          )}\n          <Box mt=\"5\">\n            <Button\n              w=\"200px\"\n              transition=\"0.5s\"\n              bg=\"#c19434\"\n              onClick={() => previousPage()}\n            >\n              Previous\n            </Button>\n            <Button\n              w=\"200px\"\n              transition=\"0.5s\"\n              bg=\"#c19434\"\n              onClick={() => nextPage()}\n            >\n              Next\n            </Button>\n          </Box>\n        </Box>\n      </Flex>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}